services:
  postgres:
    image: postgres:14.0
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    logging:
      options:
        max-size: 10m
        max-file: "3"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - confluent

  airflow-init:
    image: apache/airflow:2.9.3-python3.12
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - AIRFLOW__WEBSERVER__BASE_URL=http://localhost:8080
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW_WEBSERVER_SECRET_KEY}
      - AIRFLOW_ADMIN_USERNAME=${AIRFLOW_ADMIN_USERNAME}
      - AIRFLOW_ADMIN_PASSWORD=${AIRFLOW_ADMIN_PASSWORD}
      - AIRFLOW_ADMIN_FIRSTNAME=${AIRFLOW_ADMIN_FIRSTNAME}
      - AIRFLOW_ADMIN_LASTNAME=${AIRFLOW_ADMIN_LASTNAME}
      - AIRFLOW_ADMIN_EMAIL=${AIRFLOW_ADMIN_EMAIL}
    command: >
      bash -c "pip install --no-cache-dir -r /opt/airflow/requirements.txt &&
               airflow db init &&
               airflow users create -u ${AIRFLOW_ADMIN_USERNAME:-admin} -p ${AIRFLOW_ADMIN_PASSWORD} -f ${AIRFLOW_ADMIN_FIRSTNAME:-Admin} -l ${AIRFLOW_ADMIN_LASTNAME:-User} -r Admin -e ${AIRFLOW_ADMIN_EMAIL:-admin@example.com}"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./requirements.txt:/opt/airflow/requirements.txt
      - ./data:/opt/airflow/data
      - ./pipelines:/opt/airflow/pipelines
      - ./script/entrypoint.sh:/opt/airflow/script/entrypoint.sh
    networks:
      - confluent

  webserver:
    image: apache/airflow:2.9.3-python3.12
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    entrypoint: ["/opt/airflow/script/entrypoint.sh"]
    command: webserver
    ports:
      - "8080:8080"
    environment:
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - AIRFLOW__WEBSERVER__BASE_URL=http://localhost:8080
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW_WEBSERVER_SECRET_KEY}
      - AIRFLOW_ADMIN_USERNAME=${AIRFLOW_ADMIN_USERNAME}
      - AIRFLOW_ADMIN_PASSWORD=${AIRFLOW_ADMIN_PASSWORD}
      - AIRFLOW_ADMIN_FIRSTNAME=${AIRFLOW_ADMIN_FIRSTNAME}
      - AIRFLOW_ADMIN_LASTNAME=${AIRFLOW_ADMIN_LASTNAME}
      - AIRFLOW_ADMIN_EMAIL=${AIRFLOW_ADMIN_EMAIL}
    logging:
      options:
        max-size: 10m
        max-file: "3"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./requirements.txt:/opt/airflow/requirements.txt
      - ./data:/opt/airflow/data
      - ./pipelines:/opt/airflow/pipelines
      - ./script/entrypoint.sh:/opt/airflow/script/entrypoint.sh
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - confluent

  scheduler:
    image: apache/airflow:2.9.3-python3.12
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    entrypoint: ["/opt/airflow/script/entrypoint.sh"]
    command: scheduler
    environment:
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - AIRFLOW__WEBSERVER__BASE_URL=http://localhost:8080
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW_WEBSERVER_SECRET_KEY}
      - AIRFLOW_ADMIN_USERNAME=${AIRFLOW_ADMIN_USERNAME}
      - AIRFLOW_ADMIN_PASSWORD=${AIRFLOW_ADMIN_PASSWORD}
      - AIRFLOW_ADMIN_FIRSTNAME=${AIRFLOW_ADMIN_FIRSTNAME}
      - AIRFLOW_ADMIN_LASTNAME=${AIRFLOW_ADMIN_LASTNAME}
      - AIRFLOW_ADMIN_EMAIL=${AIRFLOW_ADMIN_EMAIL}
    volumes:
      - ./dags:/opt/airflow/dags
      - ./requirements.txt:/opt/airflow/requirements.txt
      - ./data:/opt/airflow/data
      - ./pipelines:/opt/airflow/pipelines
      - ./script/entrypoint.sh:/opt/airflow/script/entrypoint.sh
    networks:
      - confluent

networks:
  confluent: